// Generated by CoffeeScript 1.10.0
var Handlers, Reqs, Server, config, error, error1, fs, handle, http, https, msgs, needle, osenv, rc, requestHandlers, rufus, srv, tools, url, util;

require('source-map-support').install();

osenv = require('osenv');

http = require('http');

https = require('https');

url = require('url');

util = require('util');

fs = require('fs-extra');

needle = require('needle');

rufus = require('rufus');

rc = require('rc');

rufus.config({
  formatters: {
    'simple': '[%level] %message%n',
    'details': '[%date] %logger.%level: %message%n'
  },
  handlers: {
    'terminal': {
      'class': rufus.handlers.Console,
      'formatter': 'details',
      'level': rufus.VERBOSE,
      colorize: true
    },
    'logfile': {
      'class': rufus.handlers.File,
      'level': rufus.VERBOSE,
      'file': './log/linode-wss.log',
      'formatter': 'details'
    }
  },
  loggers: {
    'main': {
      'handlers': ['terminal', 'logfile'],
      'level': 'INFO',
      'handleExceptions': true,
      'exitOnError': false,
      'propagate': false
    }
  }
});

rufus.console();

global.log = rufus.getLogger('main');

log.info('Loading additional libs');

Reqs = require('./lib/reqs');

process.on('uncaughtException', function(err) {
  return console.error('Caught exception: ', err);
});

try {
  log.info('Loading msgs');
  msgs = require('./msgs.json');
  log.info('Loading tools');
  tools = require('./tools');
  log.info('Loading config');
  config = rc('linode-manager-wss', {
    'server': {
      'port': 20200,
      'secure': false,
      'host': 'localhost',
      'buffer': 102400
    },
    'linode': {
      'key': '',
      'url': 'https://api.linode.com/'
    }
  });
  Server = tools.require('./app/server');
  requestHandlers = tools.require('./app/requestHandlers');
  requestHandlers.config = config;
  requestHandlers.key(config.linode.key);
  requestHandlers.url(config.linode.url);
  Handlers = requestHandlers.handle;
  handle = {
    '/': Handlers.root
  };
  srv = Server.start(handle, config.server.port, config.server.host, config.server.secure, config.server.buffer);
} catch (error1) {
  error = error1;
  console.error('Error at program laod', error);
}

//# sourceMappingURL=linode-manager-wss.js.map
